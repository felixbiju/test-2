Angular directives
------------------
1. component directive -->It is used to define and declare data and functions and have detail info about how to instantiate and process at runtime
eg. @Component

2. Structure Directive --> It manipulates DOM and states how the display should be presented with data 
It has prefix *
eg. ngIf, *ngFor

3. Attribute directive --> It will deal  with the look and behavior of any DOM element. It is given as attribute for that element.
--> for two way binding we used [(ngModel)]
Services in angular
-------------------
services are injectable component whose data and functions can be used by any component in the angular
to generate or create services we use the foll command
---> ng g service myservice/data
---> dataserviceService.service.ts
	@Injectable --> Component Directive or decorator

Component in angular
--------------
It is a class representing data and functions for html using typescript language.
to generate command is
---> ng g component mycomp/aboutus 
---> aboutus.component.ts
	@Component-->Component Directive or decorator

	selector: 
	templateUrl:
	cssUrl:

	template:<html>.....</html>
	css:
	---> the above info about @Component is called as metadata


D:\Javaworkspace\JDBCProject2

when u connect the server to eclipse IDE then it is known as server connector in eclipse

every servlet has three properties 
-->the class name==> com.lti.controller.MyServlet
-->servlet name==> MyServlet
-->servlet url pattern==> It is nothing but the url to access or call servlet from client side browser 

		--> url pattern or url mapping= /MyServlet.view

Web application

how browser will access
http://localhost:8085/MyFirstWeb/

on other machine 
http://192.168.100.180:8085/MyFirstWeb/

JSPs are internally considered as a servlet
they are translated as a servlet at the client side 

Servlet APIs-->classes

in get method the data is sent via browser url, limited data can be passed
in post method the data is not stored in url, unlimited data can be passed

Servlets are used as a controller which controls the flow of web app at the server side

Design Model--> Model, View, Controller
--------------------------------------
ServletConfig---> It is servlet config obj generated when servlet is initialized at life cycle init()
--> Every Servlet has separate ServletConfig obj
here we can store configuration parameters required by servlet and store it automatically in ServletConfig obj
For eg. parameter is --> name="minBalance", value="1000.00"

In order to access this parameter ServletConfig has method getInitParameter("<<name of parameter>>");
getInitParameter("minBalance");

This method can be accessed directly from GenericServlet

//set maximum inactive time interval for the session 
//here we have set it for 2 hrs

session.setMaxInactiveInterval(2*60*60*1000);

when the session should be expired automatically timeout time can be set in web.xml
<session-config>
<session-timeout>90</session-timeout>
</session-config>

j-session ID is a default cookie generated by server and sent to the browser
People Club Menu
1.Add member
2.Display all members of the club
3.Total Members in each city
4.Update member city
5.Delete a member based on id
6.Exit